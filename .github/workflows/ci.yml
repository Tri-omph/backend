name: Node.js CI

on:
  push:
    branches: ['*'] # Trigger on all branches
  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: test_db
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_ROOT_HOST: "%"
          MYSQL_INITDB_SKIP_TZINFO: 1
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=5s --health-timeout=10s --health-retries=5


    steps:
      - uses: actions/checkout@v2

      # Copying the environment variables
      - name: Copy default.env to .env
        run: cp default.env .env

      # Setup Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Linting check
      - name: Run ESLint
        run: npm run lint

      # Prettier check
      - name: Check formatting with Prettier
        run: npm run format:check

      # Run tests
      - name: Run Jest tests
        run: npm test

      # Install docker-compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Remove old images
      - name: Clean up Docker images
        run: |
          docker system prune -af

      # Clear volumes
      - name: Ensure no volumes are left
        run: |
          docker-compose down -v

      # Build Docker image and verify it builds successfully
      - name: Build Docker image using Docker Compose
        run: |
          docker-compose -f docker-compose.yaml build

      # Start the app and MySQL using Docker Compose and verify it works
      - name: Start the app and MySQL using Docker Compose
        run: |
          DB_PORT=3307 docker-compose -f docker-compose.yaml up -d

          echo "Waiting for the app to start..."
          sleep 20

          curl --fail http://localhost:3000 || exit 1

          docker-compose -f docker-compose.yaml down
